package com.colonialfirststate.helper.api;

import java.util.Set;

import org.apache.sling.settings.SlingSettingsService;

import com.adobe.cq.sightly.WCMUsePojo;

public class CFSEnviromentUse extends WCMUsePojo {

    private boolean isAuthor = false;

    @Override
    public final void activate() throws Exception {
        SlingSettingsService settingService = getSlingScriptHelper()
                .getService(SlingSettingsService.class);
        if (settingService != null) {
            Set<String> runModes = settingService.getRunModes();
            if (runModes.contains("author")) {
                isAuthor = true;
            }
        }
    }
    public final boolean isCheckAuthor() {
        return isAuthor;
    }
}

https://author-p110482-e1077234.adobeaemcloud.com -dev01
https://author-p110482-e1080535.adobeaemcloud.com -dev02
https://author-p110482-e1139939.adobeaemcloud.com -dev03
https://author-p110482-e1080620.adobeaemcloud.com -stage
https://author-p110482-e1080534.adobeaemcloud.com -prod


package au.com.cfs.winged.core.util;

import org.apache.sling.settings.SlingSettingsService;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

@Component(service = CFSRunModesService.class)
public class CFSRunModesService {

    @Reference
    private SlingSettingsService settingService;

    public String getRunMode() {
        if (settingService != null) {
            if (settingService.getRunModes().contains("author")) {
                return "author";
            }
        }
        return "Unknown";
    }

    public boolean isAuthor() {
        return settingService != null && settingService.getRunModes().contains("author");
    }
}
